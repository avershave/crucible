/*
Crucible
Copyright 2020 Carnegie Mellon University.
NO WARRANTY. THIS CARNEGIE MELLON UNIVERSITY AND SOFTWARE ENGINEERING INSTITUTE MATERIAL IS FURNISHED ON AN "AS-IS" BASIS. CARNEGIE MELLON UNIVERSITY MAKES NO WARRANTIES OF ANY KIND, EITHER EXPRESSED OR IMPLIED, AS TO ANY MATTER INCLUDING, BUT NOT LIMITED TO, WARRANTY OF FITNESS FOR PURPOSE OR MERCHANTABILITY, EXCLUSIVITY, OR RESULTS OBTAINED FROM USE OF THE MATERIAL. CARNEGIE MELLON UNIVERSITY DOES NOT MAKE ANY WARRANTY OF ANY KIND WITH RESPECT TO FREEDOM FROM PATENT, TRADEMARK, OR COPYRIGHT INFRINGEMENT.
Released under a MIT (SEI)-style license, please see license.txt or contact permission@sei.cmu.edu for full terms.
[DISTRIBUTION STATEMENT A] This material has been approved for public release and unlimited distribution.  Please see Copyright notice for non-US Government use and distribution.
Carnegie Mellon® and CERT® are registered in the U.S. Patent and Trademark Office by Carnegie Mellon University.
DM20-0181
*/

/**
 * Scenario Player API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { HttpHeaders }                                       from '@angular/common/http';

import { Observable }                                        from 'rxjs';


import { ApiError } from '../model/apiError';
import { Application } from '../model/application';
import { ApplicationInstance } from '../model/applicationInstance';
import { ApplicationInstanceForm } from '../model/applicationInstanceForm';
import { ApplicationTemplate } from '../model/applicationTemplate';
import { ApplicationTemplateForm } from '../model/applicationTemplateForm';


import { Configuration }                                     from '../configuration';


export interface ApplicationServiceInterface {
    defaultHeaders: HttpHeaders;
    configuration: Configuration;
    

    /**
    * Creates a new Application within an Exercise
    * Creates a new Application within an Exercise with the attributes specified  &lt;para /&gt;  Accessible only to a SuperUser or a User on an Admin Team within the specified Exercise
    * @param id The id of the Exercise
    * @param application The data to create the Application with
    */
    createApplication(id: string, application?: Application, extraHttpRequestParams?: any): Observable<Application>;

    /**
    * Creates a new Application Instance within a Team
    * Creates a new Application Instance within a Team with the attributes specified  &lt;para /&gt;  Accessible only to a SuperUser or a User on an Admin Team within the specified Team&#39;s Exercise
    * @param id The id of the Team
    * @param instance The data to create the Application Instance with
    */
    createApplicationInstance(id: string, instance?: ApplicationInstanceForm, extraHttpRequestParams?: any): Observable<ApplicationInstance>;

    /**
    * Creates a new Application Template
    * Creates a new Application Template with the attributes specified  &lt;para /&gt;  An Application Template is a top-level resource that can optionally be the parent of an Exercise specific Application resource, which would inherit it&#39;s properties  &lt;para /&gt;  Accessible only to a SuperUser
    * @param form 
    */
    createApplicationTemplate(form?: ApplicationTemplateForm, extraHttpRequestParams?: any): Observable<ApplicationTemplate>;

    /**
    * Deletes an Application
    * Deletes an Application with the specified id  &lt;para /&gt;  Accessible only to a SuperUser or a User on an Admin Team within the specified Team&#39;s Exercise
    * @param id The id of the Application
    */
    deleteApplication(id: string, extraHttpRequestParams?: any): Observable<{}>;

    /**
    * Deletes an Application Instance
    * Deletes an Application Instance with the specified id  &lt;para /&gt;  Accessible only to a SuperUser or a User on an Admin Team in the Application Instances&#39;s Team&#39;s Exercise
    * @param id The id of the Application
    */
    deleteApplicationInstance(id: string, extraHttpRequestParams?: any): Observable<{}>;

    /**
    * Deletes an Application Template
    * Deletes an Application Template with the specified id  &lt;para /&gt;  Accessible only to a SuperUser
    * @param id The id of the Application Template to delete
    */
    deleteApplicationTemplate(id: string, extraHttpRequestParams?: any): Observable<{}>;

    /**
    * Gets a specific Application by id
    * Returns the Application with the id specified  &lt;para /&gt;  Accessible to a SuperUser or a User on an Admin Team in the Application&#39;s assigned Exercise
    * @param id The id of the Application
    */
    getApplication(id: string, extraHttpRequestParams?: any): Observable<Application>;

    /**
    * Gets a specific Application Instance by id
    * Returns the Application Instance with the id specified  &lt;para /&gt;  Accessible to a SuperUser or a User on an Admin Team in the Application Instance&#39;s Team&#39;s Exercise
    * @param id The id of the Application Instance
    */
    getApplicationInstance(id: string, extraHttpRequestParams?: any): Observable<ApplicationInstance>;

    /**
    * Gets a specific Application Template by id
    * Returns the Application Template with the id specified  &lt;para /&gt;  Only accessible to a SuperUser
    * @param id The id of the Application Template
    */
    getApplicationTemplate(id: string, extraHttpRequestParams?: any): Observable<ApplicationTemplate>;

    /**
    * Gets all Application Templates in the system
    * Returns a list of all of the Application Templates in the system.  &lt;para /&gt;  Only accessible to a SuperUser
    */
    getApplicationTemplates(extraHttpRequestParams?: any): Observable<Array<ApplicationTemplate>>;

    /**
    * Gets all Applications for an Exercise
    * Returns all Applications assigned to a specific Exercise  &lt;para /&gt;  Accessible to a SuperUser or a User on an Admin Team within that Exercise
    * @param id The id of the Exercise
    */
    getExerciseApplications(id: string, extraHttpRequestParams?: any): Observable<Array<Application>>;

    /**
    * Gets all Applications Instances for a Team
    * Returns all Application Instances assigned to a specific Team  &lt;para /&gt;  Accessible to a SuperUser, a User on an Admin Team in the Team&#39;s Exercise, or any User on the specified Team
    * @param id The id of the Team
    */
    getTeamApplicationInstances(id: string, extraHttpRequestParams?: any): Observable<Array<ApplicationInstance>>;

    /**
    * Updates an Application
    * Updates an Application with the attributes specified  &lt;para /&gt;  Accessible only to a SuperUser or a User on an Admin Team in the Application&#39;s assigned Exercise
    * @param id 
    * @param application 
    */
    updateApplication(id: string, application?: Application, extraHttpRequestParams?: any): Observable<Application>;

    /**
    * Updates an Application Instance
    * Updates an Application Instance with the attributes specified  &lt;para /&gt;  Accessible only to a SuperUser or a User on an Admin Team in the Application Instances&#39;s Team&#39;s Exercise
    * @param id The id of the Application Instance
    * @param instance The updated instance values
    */
    updateApplicationInstance(id: string, instance?: ApplicationInstanceForm, extraHttpRequestParams?: any): Observable<ApplicationInstance>;

    /**
    * Updates an Application Template
    * Updates an Application Template with the attributes specified  &lt;para /&gt;  Accessible only to a SuperUser
    * @param id 
    * @param form The updated Application Template values
    */
    updateApplicationTemplate(id: string, form?: ApplicationTemplateForm, extraHttpRequestParams?: any): Observable<ApplicationTemplate>;

}

