/*
Crucible
Copyright 2020 Carnegie Mellon University.
NO WARRANTY. THIS CARNEGIE MELLON UNIVERSITY AND SOFTWARE ENGINEERING INSTITUTE MATERIAL IS FURNISHED ON AN "AS-IS" BASIS. CARNEGIE MELLON UNIVERSITY MAKES NO WARRANTIES OF ANY KIND, EITHER EXPRESSED OR IMPLIED, AS TO ANY MATTER INCLUDING, BUT NOT LIMITED TO, WARRANTY OF FITNESS FOR PURPOSE OR MERCHANTABILITY, EXCLUSIVITY, OR RESULTS OBTAINED FROM USE OF THE MATERIAL. CARNEGIE MELLON UNIVERSITY DOES NOT MAKE ANY WARRANTY OF ANY KIND WITH RESPECT TO FREEDOM FROM PATENT, TRADEMARK, OR COPYRIGHT INFRINGEMENT.
Released under a MIT (SEI)-style license, please see license.txt or contact permission@sei.cmu.edu for full terms.
[DISTRIBUTION STATEMENT A] This material has been approved for public release and unlimited distribution.  Please see Copyright notice for non-US Government use and distribution.
Carnegie Mellon® and CERT® are registered in the U.S. Patent and Trademark Office by Carnegie Mellon University.
DM20-0181
*/

/**
 * Scenario Player API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { HttpHeaders }                                       from '@angular/common/http';

import { Observable }                                        from 'rxjs';


import { ApiError } from '../model/apiError';
import { TeamMembership } from '../model/teamMembership';
import { TeamMembershipForm } from '../model/teamMembershipForm';


import { Configuration }                                     from '../configuration';


export interface TeamMembershipServiceInterface {
    defaultHeaders: HttpHeaders;
    configuration: Configuration;
    

    /**
    * Gets a specific Team Membership by id
    * Returns the Team Membership with the id specified  &lt;para /&gt;  Accessible to Super Users, Exercise Admins for the membership&#39;s Exercise, or the User that the membership belongs to
    * @param id The id of the Team Membership
    */
    getTeamMembership(id: string, extraHttpRequestParams?: any): Observable<TeamMembership>;

    /**
    * Gets all Team Memberships for a User by Exercise
    * Returns a list of all of the Permissions in the system.  &lt;para /&gt;  Accessible to Super Users or the specified User
    * @param exerciseId 
    * @param userId 
    */
    getTeamMemberships(exerciseId: string, userId: string, extraHttpRequestParams?: any): Observable<Array<TeamMembership>>;

    /**
    * Updates a Team Membership
    * Updates a Team Membership with the attributes specified  &lt;para /&gt;  Accessible only to a SuperUser or a User on an Admin Team within the specified Exercise
    * @param id The id of the Team Membership
    * @param form The updated Team Membership values
    */
    updateTeamMembership(id: string, form?: TeamMembershipForm, extraHttpRequestParams?: any): Observable<TeamMembership>;

}

